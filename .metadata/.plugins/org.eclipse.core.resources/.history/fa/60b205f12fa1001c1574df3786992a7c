package algo;

public class testList {
	
	public static Linked_list cumulativeSum(Linked_list in)
	{
		Linked_list out = new Linked_list(in.node.data);
		Linked_list temp = copyLinkedList(in);
		int sum = 0;
		for(int i = 1; i < in.length; i++)
		{
			for(int j = 0; j<=i; j++)
			{
					sum+=temp.node.data;
					temp.node = temp.node.next;
			}
			out.addLast(sum);
			temp = copyLinkedList(in);
			sum = 0;
		}
		return out;
	}
	
	public static Linked_list copyLinkedList(Linked_list ll)
	{
		Linked_list temp = new Linked_list(ll.node.data);
		ll.node = ll.node.next;
		while(ll.node != null)
		{
			temp.addLast(ll.node.data);
			ll.node = ll.node.next;
		}
		return temp;
	}
	
	public static void main(String[] args)
	{
		Linked_list head = new Linked_list(3);
		System.out.println(head.toString());
		head.addLast(4);
		head.push(6);
		System.out.println(head.toString());
		Linked_list cSum = cumulativeSum(head);
		System.out.println(cSum.toString());
		return;
	}
}
