/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;
import java.awt.event.*;
import java.io.File;

import java.awt.Color;
import java.awt.Dimension;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTree;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
/**
 *
 * @author ThinkPad
 */
public class Mainmenu extends javax.swing.JFrame {

    /**
     * Creates new form Mainmenu
     */
    boolean a = false;
    public Mainmenu() {
        try
        {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels())
                if("Windows".equals(info.getName())){
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
        }catch(Exception ex){
            
        }
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

    	Font fb = null;
		Font fm = null;
		try {
			fb = Font.createFont(Font.TRUETYPE_FONT, new File("src/font/Montserrat/Montserrat-Bold.ttf"));
			fm = Font.createFont(Font.TRUETYPE_FONT, new File("src/font/Montserrat/Montserrat-Medium.ttf"));

			GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
			ge.registerFont(fb);
			ge.registerFont(fm);
		}
		catch (Exception e) {
			e.printStackTrace();
		}
        Header = new javax.swing.JPanel();
        iconminmaxclose = new javax.swing.JPanel();
        Buttonclose = new javax.swing.JPanel();
        close = new javax.swing.JLabel();
        Buttonmax = new javax.swing.JPanel();
        fullmax = new javax.swing.JLabel();
        ButtonMin = new javax.swing.JPanel();
        menu = new javax.swing.JPanel();
        MenuIcon = new javax.swing.JPanel();
        lineseting1 = new javax.swing.JPanel();
        setting1 = new javax.swing.JPanel();
        Buttonsetting1 = new javax.swing.JLabel();
        lineseting = new javax.swing.JPanel();
        setting = new javax.swing.JPanel();
        Buttonsetting = new javax.swing.JLabel();
        hidemenu = new javax.swing.JPanel();
        buttonhidemenu = new javax.swing.JLabel();
        linehidemenu = new javax.swing.JPanel();
        lineseting2 = new javax.swing.JPanel();
        setting2 = new javax.swing.JPanel();
        Buttonsetting2 = new javax.swing.JLabel();
        menuhide = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        drawingPanel = new JPanel(new java.awt.GridLayout(0, 1, 0, 0));

        ds = new drawShape("rectangle");
        drawingPanel.add(ds);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Header.setBackground(new java.awt.Color(5, 10, 46));
        Header.setPreferredSize(new java.awt.Dimension(800, 50));
        Header.setLayout(new java.awt.BorderLayout());

        iconminmaxclose.setBackground(new java.awt.Color(5, 10, 46));
        iconminmaxclose.setPreferredSize(new java.awt.Dimension(150, 50));

        Buttonclose.setBackground(new java.awt.Color(5, 10, 46));
        Buttonclose.setLayout(new java.awt.BorderLayout());

        close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("icons/delete_32px.png"))); // NOI18N
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeMouseExited(evt);
            }
        });
        Buttonclose.add(close, java.awt.BorderLayout.CENTER);


        Buttonmax.setBackground(new java.awt.Color(5, 10, 46));
        Buttonmax.setLayout(new java.awt.BorderLayout());

        fullmax.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fullmax.setIcon(new javax.swing.ImageIcon(getClass().getResource("icons/full_screen_32px.png"))); // NOI18N
        fullmax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fullmaxMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fullmaxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fullmaxMouseExited(evt);
            }
        });
        Buttonmax.add(fullmax, java.awt.BorderLayout.CENTER);


        ButtonMin.setBackground(new java.awt.Color(5, 10, 46));
        ButtonMin.setLayout(new java.awt.BorderLayout());

        Header.add(iconminmaxclose, java.awt.BorderLayout.LINE_END);

        getContentPane().add(Header, java.awt.BorderLayout.PAGE_START);

        menu.setPreferredSize(new java.awt.Dimension(50, 450));
        menu.setLayout(new java.awt.BorderLayout());

        MenuIcon.setBackground(new java.awt.Color(5, 10, 46));
        MenuIcon.setPreferredSize(new java.awt.Dimension(50, 450));

        lineseting1.setBackground(new java.awt.Color(5, 10, 46));
        lineseting1.setPreferredSize(new java.awt.Dimension(50, 5));

        javax.swing.GroupLayout lineseting1Layout = new javax.swing.GroupLayout(lineseting1);
        lineseting1.setLayout(lineseting1Layout);
        lineseting1Layout.setHorizontalGroup(
            lineseting1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        lineseting1Layout.setVerticalGroup(
            lineseting1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );


        setting1.setBackground(new java.awt.Color(5, 10, 46));
        setting1.setLayout(new java.awt.BorderLayout());

        Buttonsetting1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Buttonsetting1.setIcon(new javax.swing.ImageIcon(getClass().getResource("icons/polygon.png"))); // NOI18N
        Buttonsetting1.setAutoscrolls(true);
        Buttonsetting1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Buttonsetting1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Buttonsetting1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Buttonsetting1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Buttonsetting1MouseExited(evt);
            }
        });
        setting1.add(Buttonsetting1, java.awt.BorderLayout.CENTER);


        lineseting.setBackground(new java.awt.Color(5, 10, 46));
        lineseting.setPreferredSize(new java.awt.Dimension(50, 5));

        javax.swing.GroupLayout linesetingLayout = new javax.swing.GroupLayout(lineseting);
        lineseting.setLayout(linesetingLayout);
        linesetingLayout.setHorizontalGroup(
            linesetingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        linesetingLayout.setVerticalGroup(
            linesetingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );


        setting.setBackground(new java.awt.Color(5, 10, 46));
        setting.setLayout(new java.awt.BorderLayout());

        Buttonsetting.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Buttonsetting.setIcon(new javax.swing.ImageIcon(getClass().getResource("icons/square.png"))); // NOI18N
        Buttonsetting.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Buttonsetting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonsettingMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonsettingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ButtonsettingMouseExited(evt);
            }
        });
        setting.add(Buttonsetting, java.awt.BorderLayout.CENTER);


        hidemenu.setBackground(new java.awt.Color(5, 10, 46));
        hidemenu.setLayout(new java.awt.BorderLayout());

        buttonhidemenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        buttonhidemenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("icons/menu_32px.png"))); // NOI18N
        buttonhidemenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonhidemenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonhidemenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonhidemenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonhidemenuMouseExited(evt);
            }
        });
        hidemenu.add(buttonhidemenu, java.awt.BorderLayout.CENTER);


        linehidemenu.setBackground(new java.awt.Color(5, 10, 46));
        linehidemenu.setPreferredSize(new java.awt.Dimension(50, 5));

        javax.swing.GroupLayout linehidemenuLayout = new javax.swing.GroupLayout(linehidemenu);
        linehidemenu.setLayout(linehidemenuLayout);
        linehidemenuLayout.setHorizontalGroup(
            linehidemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        linehidemenuLayout.setVerticalGroup(
            linehidemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );


        lineseting2.setBackground(new java.awt.Color(5, 10, 46));
        lineseting2.setPreferredSize(new java.awt.Dimension(50, 5));

        javax.swing.GroupLayout lineseting2Layout = new javax.swing.GroupLayout(lineseting2);
        lineseting2.setLayout(lineseting2Layout);
        lineseting2Layout.setHorizontalGroup(
            lineseting2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        lineseting2Layout.setVerticalGroup(
            lineseting2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );


        setting2.setBackground(new java.awt.Color(5, 10, 46));
        setting2.setLayout(new java.awt.BorderLayout());

        Buttonsetting2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Buttonsetting2.setIcon(new javax.swing.ImageIcon(getClass().getResource("icons/line.png"))); // NOI18N
        Buttonsetting2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Buttonsetting2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Buttonsetting2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Buttonsetting2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Buttonsetting2MouseExited(evt);
            }
        });
        setting2.add(Buttonsetting2, java.awt.BorderLayout.CENTER);


        menu.add(MenuIcon, java.awt.BorderLayout.LINE_START);

        menuhide.setBackground(new java.awt.Color(25, 29, 74));
        menuhide.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setBorder(null);

        jTree1.setBackground(new java.awt.Color(25, 29, 74));
        jTree1.setForeground(new java.awt.Color(25, 29, 74));
        jTree1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTree1.setName(""); // NOI18N
        jTree1.setSelectionModel(null);
        jTree1.setShowsRootHandles(true);
        jScrollPane2.setViewportView(jTree1);

        menuhide.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        menu.add(menuhide, java.awt.BorderLayout.CENTER);

        getContentPane().add(menu, java.awt.BorderLayout.LINE_START);

        
        getContentPane().add(drawingPanel, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(800, 500));
        setLocationRelativeTo(null);


    }// </editor-fold>                        
    
    public void changecolor(JPanel hover, Color rand){
        hover.setBackground(rand);
    }
    
    public void clickmenu(JPanel h1, JPanel h2, int numberbool){
        if(numberbool == 1){
            h1.setBackground(new Color(25, 29, 74));
            h2.setBackground(new Color(5, 10, 46));
        }
        else{
            h1.setBackground(new Color(5, 10, 46));
            h2.setBackground(new Color(25, 29, 74));
        }
    }
    
    public void changeimage(JLabel button, String resourcheimg){
        ImageIcon aimg = new ImageIcon(getClass().getResource(resourcheimg));
        button.setIcon(aimg);
    }
    
    public void hideshow(JPanel menushowhide, boolean dashboard, JLabel button){
        if(dashboard == true){
            menushowhide.setPreferredSize(new Dimension(50, menushowhide.getHeight()));
            changeimage(button, "icons/menu_32px.png");
        }
        else{
            menushowhide.setPreferredSize(new Dimension(270, menushowhide.getHeight()));
            changeimage(button, "icons/back_32px.png");
        }
        
    }
    
    private void closeMouseEntered(java.awt.event.MouseEvent evt) {                                   
        changecolor(Buttonclose, new Color(25, 29, 74));
    }                                  

    private void closeMouseExited(java.awt.event.MouseEvent evt) {                                  
        changecolor(Buttonclose, new Color(5, 10, 46));
    }                                 

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {                                   
        System.exit(0);
    }                                  

    private void fullmaxMouseEntered(java.awt.event.MouseEvent evt) {                                     
        changecolor(Buttonmax, new Color(25, 29, 74));
    }                                    

    private void fullmaxMouseExited(java.awt.event.MouseEvent evt) {                                    
        changecolor(Buttonmax, new Color(5, 10, 46));
    }                                   

    private void fullmaxMouseClicked(java.awt.event.MouseEvent evt) {                                     
        if(this.getExtendedState()!= Mainmenu.MAXIMIZED_BOTH){
          this.setExtendedState(Mainmenu.MAXIMIZED_BOTH);
        }
        else{
            this.setExtendedState(Mainmenu.NORMAL);
        }
    }                                    

    private void buttonhidemenuMouseEntered(java.awt.event.MouseEvent evt) {                                            
        changecolor(linehidemenu, new Color(247, 78, 105));
    }                                           

    private void buttonhidemenuMouseExited(java.awt.event.MouseEvent evt) {                                           
        changecolor(linehidemenu, new Color(5, 10, 46));
    }                                          

    private void buttonhidemenuMouseClicked(java.awt.event.MouseEvent evt) {                                            
        clickmenu(hidemenu, setting, 1);
        //create void for methode hide and show panel menu
        if(a==true){
          hideshow(menu, a, buttonhidemenu);
          SwingUtilities.updateComponentTreeUI(this);
          //create methode change image
          
          a=false;
        }
        else{
            hideshow(menu, a, buttonhidemenu);
            SwingUtilities.updateComponentTreeUI(this);
            a=true;
        }
        
    }                                           

    private void ButtonsettingMouseEntered(java.awt.event.MouseEvent evt) {                                           
        changecolor(lineseting, new Color(8, 177, 150));
    }                                          

    private void ButtonsettingMouseExited(java.awt.event.MouseEvent evt) {                                          
        changecolor(lineseting, new Color(5, 10, 46));
    }                                         

    private void ButtonsettingMouseClicked(java.awt.event.MouseEvent evt) {                                           
        clickmenu(setting, hidemenu, 1);
        clickmenu(setting, setting1, 1);
        clickmenu(setting, setting2, 1);

    }                                          

    private void Buttonsetting1MouseClicked(java.awt.event.MouseEvent evt) {                                            
        // TODO add your handling code here:
        clickmenu(setting1, hidemenu, 1);
        clickmenu(setting1, setting, 1);
        clickmenu(setting1, setting2, 1);
    }                                           

    private void Buttonsetting1MouseEntered(java.awt.event.MouseEvent evt) {                                            
        // TODO add your handling code here:
        changecolor(lineseting1, new Color(8, 177, 150));
    }                                           

    private void Buttonsetting1MouseExited(java.awt.event.MouseEvent evt) {                                           
        // TODO add your handling code here:
        changecolor(lineseting1, new Color(5, 10, 46));
    }                                          

    private void Buttonsetting2MouseClicked(java.awt.event.MouseEvent evt) {                                            
        // TODO add your handling code here:
        clickmenu(setting2, hidemenu, 1);
        clickmenu(setting2, setting1, 1);
        clickmenu(setting2, setting, 1);

    }                                           

    private void Buttonsetting2MouseEntered(java.awt.event.MouseEvent evt) {                                            
        // TODO add your handling code here:
        changecolor(lineseting2, new Color(8, 177, 150));
    }                                           

    private void Buttonsetting2MouseExited(java.awt.event.MouseEvent evt) {                                           
        // TODO add your handling code here:
            changecolor(lineseting2, new Color(5, 10, 46));
    }                                          

    /**
     * @param args the command line arguments
     */
    /*
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mainmenu().setVisible(true);
            }
        });
    }*/
	public class btnCloseHandler implements ActionListener {

		public void actionPerformed(ActionEvent e) {
			dispose();
		}
		
	}
	
    
    // Variables declaration - do not modify                     
    private javax.swing.JPanel ButtonMin;
    private drawShape ds;
    private javax.swing.JPanel Buttonclose;
    private javax.swing.JPanel Buttonmax;
    private javax.swing.JLabel Buttonsetting;
    private javax.swing.JLabel Buttonsetting1;
    private javax.swing.JLabel Buttonsetting2;
    private javax.swing.JPanel Header;
    private javax.swing.JPanel MenuIcon;
    private javax.swing.JLabel buttonhidemenu;
    private javax.swing.JLabel close;
    private javax.swing.JPanel drawingPanel;
    private javax.swing.JLabel fullmax;
    private javax.swing.JPanel hidemenu;
    private javax.swing.JPanel iconminmaxclose;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTree1;
    private javax.swing.JPanel linehidemenu;
    private javax.swing.JPanel lineseting;
    private javax.swing.JPanel lineseting1;
    private javax.swing.JPanel lineseting2;
    private javax.swing.JPanel menu;
    private javax.swing.JPanel menuhide;
    private javax.swing.JPanel setting;
    private javax.swing.JPanel setting1;
    private javax.swing.JPanel setting2;

    JButton btnClose;
    JButton btnRectangle, btnCircle, btnLine, btnPolygon;
    JButton btnTransform, btnFill, btnClip;
    JButton btnSelectColor, btnApplyFill;
    JButton btnClippingWindow, btnApplyClip;
    JButton btnApplyTransformation;
    
    JComboBox<String> jcb_transformations;
    JComboBox<String> jcb_shearOptions;
    JComboBox<String> jcb_reflectionOptions;
    JTextField tf_tx, tf_ty;
    JTextField tf_normalRotationDeg, tf_fpRotationDeg;
    JTextField tf_fpRotationX, tf_fpRotationY;
    JTextField tf_normalScalingSx, tf_normalScalingSy;
    JTextField tf_fpScalingSx, tf_fpScalingSy;
    JTextField tf_fpScalingX, tf_fpScalingY;
    JTextField tf_shearFactor;
    
    JPanel jp_optionsOptions, jp_transformation, jp_fill, jp_clip;
    JPanel jp_transformationContainer, jp_translation, jp_normalRotation, jp_rotationFixedPoint, jp_normalScaling, jp_fpScaling, jp_shear, jp_reflection;
    
    drawClippingWindow cw;
    Color selectedColor;
    // End of variables declaration                   

}